{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/PRO/React JS/slackclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"D:/PRO/React JS/slackclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useEffect,useRef}from\"react\";import{db}from\"../firebase\";import InfoOutlinedIcon from\"@material-ui/icons/InfoOutlined\";import StarBorderOutlinedIcon from\"@material-ui/icons/StarBorderOutlined\";import Message from\"./Message\";import ChatInput from\"./ChatInput\";import{useCollection}from\"react-firebase-hooks/firestore\";import{useSelector}from\"react-redux\";import{selectRoomId}from\"../features/appSlice\";import styled from\"styled-components\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Chat(){var chatRef=useRef(null);var roomId=useSelector(selectRoomId);var _useCollection=useCollection(roomId&&db.collection(\"rooms\").doc(roomId)),_useCollection2=_slicedToArray(_useCollection,1),roomDetails=_useCollection2[0];var _useCollection3=useCollection(roomId&&db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\")),_useCollection4=_slicedToArray(_useCollection3,2),roomMessages=_useCollection4[0],roomLoading=_useCollection4[1];useEffect(function(){var _chatRef$current;chatRef===null||chatRef===void 0?void 0:(_chatRef$current=chatRef.current)===null||_chatRef$current===void 0?void 0:_chatRef$current.scrollIntoView();},[roomId,roomLoading]);return/*#__PURE__*/_jsx(ChatContainer,{children:roomDetails&&roomMessages&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(HeaderLeft,{children:/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"#\",roomDetails===null||roomDetails===void 0?void 0:roomDetails.data().name]}),/*#__PURE__*/_jsx(StarBorderOutlinedIcon,{})]})}),/*#__PURE__*/_jsx(HeaderRight,{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(InfoOutlinedIcon,{}),\" Details\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat__messages\",children:[roomMessages===null||roomMessages===void 0?void 0:roomMessages.docs.map(function(doc){var _doc$data=doc.data(),message=_doc$data.message,timestamp=_doc$data.timestamp,user=_doc$data.user,userImage=_doc$data.userImage;return/*#__PURE__*/_jsx(Message,{message:message,timestamp:timestamp,user:user,userImage:userImage},doc.id);}),/*#__PURE__*/_jsx(ChatBottom,{ref:chatRef})]}),/*#__PURE__*/_jsx(ChatInput,{chatRef:chatRef,channelName:roomDetails.data().name,channelId:roomId})]})});}export default Chat;var ChatContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: 0.7;\\n  flex-grow: 1;\\n  overflow-y: scroll;\\n\"])));var Header=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 20px;\\n  border-bottom: 1px solid lightgray;\\n\"])));var HeaderLeft=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  > h4 {\\n    display: flex;\\n    text-transform: lowercase;\\n  }\\n\\n  > h4 > .MuiSvgIcon-root {\\n    margin-left: 10px;\\n    font-size: 18px;\\n  }\\n\"])));var HeaderRight=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  > p {\\n    display: flex;\\n    align-items: center;\\n    font-size: 14px;\\n  }\\n\\n  > p > .MuiSvgIcon-root {\\n    margin-right: 5px !important;\\n    font-size: 16px;\\n  }\\n\"])));var ChatBottom=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding-bottom: 200px;\\n\"])));","map":{"version":3,"sources":["D:/PRO/React JS/slackclone/src/components/Chat.js"],"names":["React","useEffect","useRef","db","InfoOutlinedIcon","StarBorderOutlinedIcon","Message","ChatInput","useCollection","useSelector","selectRoomId","styled","Chat","chatRef","roomId","collection","doc","roomDetails","orderBy","roomMessages","roomLoading","current","scrollIntoView","data","name","docs","map","message","timestamp","user","userImage","id","ChatContainer","div","Header","HeaderLeft","HeaderRight","ChatBottom"],"mappings":"0YAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,EAAT,KAAmB,aAAnB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,uCAAnC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6IAEA,QAASC,CAAAA,IAAT,EAAgB,CACd,GAAMC,CAAAA,OAAO,CAAGX,MAAM,CAAC,IAAD,CAAtB,CACA,GAAMY,CAAAA,MAAM,CAAGL,WAAW,CAACC,YAAD,CAA1B,CAFc,mBAGQF,aAAa,CACjCM,MAAM,EAAIX,EAAE,CAACY,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,MAA3B,CADuB,CAHrB,kDAGPG,WAHO,wCAMsBT,aAAa,CAC/CM,MAAM,EACJX,EAAE,CACCY,UADH,CACc,OADd,EAEGC,GAFH,CAEOF,MAFP,EAGGC,UAHH,CAGc,UAHd,EAIGG,OAJH,CAIW,WAJX,CAIwB,KAJxB,CAF6C,CANnC,mDAMPC,YANO,oBAMOC,WANP,oBAednB,SAAS,CAAC,UAAM,sBACdY,OAAO,OAAP,EAAAA,OAAO,SAAP,0BAAAA,OAAO,CAAEQ,OAAT,4DAAkBC,cAAlB,GACD,CAFQ,CAEN,CAACR,MAAD,CAASM,WAAT,CAFM,CAAT,CAIA,mBACE,KAAC,aAAD,WACGH,WAAW,EAAIE,YAAf,eACC,wCACE,MAAC,MAAD,yBACE,KAAC,UAAD,wBACE,mCACE,8BAAUF,WAAV,SAAUA,WAAV,iBAAUA,WAAW,CAAEM,IAAb,GAAoBC,IAA9B,GADF,cAEE,KAAC,sBAAD,IAFF,GADF,EADF,cAOE,KAAC,WAAD,wBACE,kCACE,KAAC,gBAAD,IADF,cADF,EAPF,GADF,cAeE,aAAK,SAAS,CAAC,gBAAf,WACGL,YADH,SACGA,YADH,iBACGA,YAAY,CAAEM,IAAd,CAAmBC,GAAnB,CAAuB,SAACV,GAAD,CAAS,eACiBA,GAAG,CAACO,IAAJ,EADjB,CACvBI,OADuB,WACvBA,OADuB,CACdC,SADc,WACdA,SADc,CACHC,IADG,WACHA,IADG,CACGC,SADH,WACGA,SADH,CAE/B,mBACE,KAAC,OAAD,EAEE,OAAO,CAAEH,OAFX,CAGE,SAAS,CAAEC,SAHb,CAIE,IAAI,CAAEC,IAJR,CAKE,SAAS,CAAEC,SALb,EACOd,GAAG,CAACe,EADX,CADF,CASD,CAXA,CADH,cAaE,KAAC,UAAD,EAAY,GAAG,CAAElB,OAAjB,EAbF,GAfF,cA+BE,KAAC,SAAD,EACE,OAAO,CAAEA,OADX,CAEE,WAAW,CAAEI,WAAW,CAACM,IAAZ,GAAmBC,IAFlC,CAGE,SAAS,CAAEV,MAHb,EA/BF,GAFJ,EADF,CA2CD,CAED,cAAeF,CAAAA,IAAf,CAEA,GAAMoB,CAAAA,aAAa,CAAGrB,MAAM,CAACsB,GAAV,yHAAnB,CAMA,GAAMC,CAAAA,MAAM,CAAGvB,MAAM,CAACsB,GAAV,mLAAZ,CAOA,GAAME,CAAAA,UAAU,CAAGxB,MAAM,CAACsB,GAAV,0NAAhB,CAYA,GAAMG,CAAAA,WAAW,CAAGzB,MAAM,CAACsB,GAAV,mPAAjB,CAaA,GAAMI,CAAAA,UAAU,CAAG1B,MAAM,CAACsB,GAAV,+FAAhB","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport Message from \"./Message\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectRoomId } from \"../features/appSlice\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Chat() {\r\n  const chatRef = useRef(null);\r\n  const roomId = useSelector(selectRoomId);\r\n  const [roomDetails] = useCollection(\r\n    roomId && db.collection(\"rooms\").doc(roomId)\r\n  );\r\n  const [roomMessages, roomLoading] = useCollection(\r\n    roomId &&\r\n      db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    chatRef?.current?.scrollIntoView();\r\n  }, [roomId, roomLoading]);\r\n\r\n  return (\r\n    <ChatContainer>\r\n      {roomDetails && roomMessages && (\r\n        <>\r\n          <Header>\r\n            <HeaderLeft>\r\n              <h4>\r\n                <strong>#{roomDetails?.data().name}</strong>\r\n                <StarBorderOutlinedIcon />\r\n              </h4>\r\n            </HeaderLeft>\r\n            <HeaderRight>\r\n              <p>\r\n                <InfoOutlinedIcon /> Details\r\n              </p>\r\n            </HeaderRight>\r\n          </Header>\r\n\r\n          <div className=\"chat__messages\">\r\n            {roomMessages?.docs.map((doc) => {\r\n              const { message, timestamp, user, userImage } = doc.data();\r\n              return (\r\n                <Message\r\n                  key={doc.id}\r\n                  message={message}\r\n                  timestamp={timestamp}\r\n                  user={user}\r\n                  userImage={userImage}\r\n                />\r\n              );\r\n            })}\r\n            <ChatBottom ref={chatRef} />\r\n          </div>\r\n\r\n          <ChatInput\r\n            chatRef={chatRef}\r\n            channelName={roomDetails.data().name}\r\n            channelId={roomId}\r\n          />\r\n        </>\r\n      )}\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst ChatContainer = styled.div`\r\n  flex: 0.7;\r\n  flex-grow: 1;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  > h4 {\r\n    display: flex;\r\n    text-transform: lowercase;\r\n  }\r\n\r\n  > h4 > .MuiSvgIcon-root {\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  > p {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n  }\r\n\r\n  > p > .MuiSvgIcon-root {\r\n    margin-right: 5px !important;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ChatBottom = styled.div`\r\n  padding-bottom: 200px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}