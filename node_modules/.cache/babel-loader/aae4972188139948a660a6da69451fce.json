{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/PRO/React JS/slackclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from\"react\";import{db}from\"../firebase\";import{useDispatch}from\"react-redux\";import{enterRoom}from\"../features/appSlice\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SidebarOption(_ref){var Icon=_ref.Icon,title=_ref.title,id=_ref.id,addChannelOption=_ref.addChannelOption;var dispatch=useDispatch();var selectChannel=function selectChannel(){if(id){dispatch(enterRoom({roomId:id}));}};var addChannel=function addChannel(){var channelName=prompt(\"Merci d'indiquer le nouveau nom de la chaine de discussion\");if(channelName){db.collection(\"rooms\").add({name:channelName});}};return/*#__PURE__*/_jsxs(SidebarOptionContainer,{onClick:addChannelOption?addChannel:selectChannel,children:[Icon&&/*#__PURE__*/_jsx(Icon,{fontSize:\"small\",style:{padding:10}}),Icon?/*#__PURE__*/_jsx(\"h3\",{children:title}):/*#__PURE__*/_jsxs(SidebarOptionChannel,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"#\"}),\" \",title]})]});}export default SidebarOption;var SidebarOptionContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  font-size: 12px;\\n  align-items: center;\\n  padding-left: 2px;\\n  cursor: pointer;\\n\\n  :hover {\\n    opacity: 0.9;\\n    background-color: #340e36;\\n  }\\n\\n  > h3 {\\n    font-weight: 500;\\n  }\\n\\n  > h3 > span {\\n    padding: 15px;\\n  }\\n\"])));var SidebarOptionChannel=styled.h3(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 10px 0;\\n  font-weight: 300;\\n\"])));","map":{"version":3,"sources":["D:/PRO/React JS/slackclone/src/components/SidebarOption.js"],"names":["React","db","useDispatch","enterRoom","styled","SidebarOption","Icon","title","id","addChannelOption","dispatch","selectChannel","roomId","addChannel","channelName","prompt","collection","add","name","padding","SidebarOptionContainer","div","SidebarOptionChannel","h3"],"mappings":"sMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,EAAT,KAAmB,aAAnB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,SAAT,KAA0B,sBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,QAASC,CAAAA,aAAT,MAA8D,IAArCC,CAAAA,IAAqC,MAArCA,IAAqC,CAA/BC,KAA+B,MAA/BA,KAA+B,CAAxBC,EAAwB,MAAxBA,EAAwB,CAApBC,gBAAoB,MAApBA,gBAAoB,CAC5D,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIH,EAAJ,CAAQ,CACNE,QAAQ,CACNP,SAAS,CAAC,CACRS,MAAM,CAAEJ,EADA,CAAD,CADH,CAAR,CAKD,CACF,CARD,CASA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAAC,4DAAD,CAA1B,CAEA,GAAID,WAAJ,CAAiB,CACfb,EAAE,CAACe,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,CACzBC,IAAI,CAAEJ,WADmB,CAA3B,EAGD,CACF,CARD,CAUA,mBACE,MAAC,sBAAD,EACE,OAAO,CAAEL,gBAAgB,CAAGI,UAAH,CAAgBF,aAD3C,WAGGL,IAAI,eAAI,KAAC,IAAD,EAAM,QAAQ,CAAC,OAAf,CAAuB,KAAK,CAAE,CAAEa,OAAO,CAAE,EAAX,CAA9B,EAHX,CAIGb,IAAI,cACH,oBAAKC,KAAL,EADG,cAGH,MAAC,oBAAD,yBACE,2BADF,KACkBA,KADlB,GAPJ,GADF,CAcD,CAED,cAAeF,CAAAA,aAAf,CAEA,GAAMe,CAAAA,sBAAsB,CAAGhB,MAAM,CAACiB,GAAV,qUAA5B,CAqBA,GAAMC,CAAAA,oBAAoB,CAAGlB,MAAM,CAACmB,EAAV,8GAA1B","sourcesContent":["import React from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { enterRoom } from \"../features/appSlice\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction SidebarOption({ Icon, title, id, addChannelOption }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const addChannel = () => {\r\n    const channelName = prompt(\"Merci d'indiquer le nouveau nom de la chaine de discussion\");\r\n\r\n    if (channelName) {\r\n      db.collection(\"rooms\").add({\r\n        name: channelName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SidebarOptionContainer\r\n      onClick={addChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n      {Icon ? (\r\n        <h3>{title}</h3>\r\n      ) : (\r\n        <SidebarOptionChannel>\r\n          <span>#</span> {title}\r\n        </SidebarOptionChannel>\r\n      )}\r\n    </SidebarOptionContainer>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n\r\nconst SidebarOptionContainer = styled.div`\r\n  display: flex;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.9;\r\n    background-color: #340e36;\r\n  }\r\n\r\n  > h3 {\r\n    font-weight: 500;\r\n  }\r\n\r\n  > h3 > span {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst SidebarOptionChannel = styled.h3`\r\n  padding: 10px 0;\r\n  font-weight: 300;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}