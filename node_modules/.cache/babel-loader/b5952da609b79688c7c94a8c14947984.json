{"ast":null,"code":"var _jsxFileName = \"D:\\\\PRO\\\\React JS\\\\slackclone\\\\src\\\\components\\\\SideBarOption\\\\SideBarOption.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { db } from '../../firebase';\nimport { useDispatch } from \"react-redux\";\nimport { enterRoom } from '../../features/appSlice';\nimport SideBarOptionStyled from './SideBarOptionStyted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SideBarOption({\n  Icon,\n  title,\n  addChanelOption,\n  id\n}) {\n  _s();\n\n  // déclencher la requête avec Dispacth\n  const dispatch = useDispatch();\n\n  const selectChannel = () => {\n    if (id) {\n      dispatch(enterRoom({\n        roomId: id\n      }));\n    }\n  };\n\n  const addChannel = () => {\n    const channelName = prompt(\"Please enter channel name\");\n\n    if (channelName) {\n      db.collection(\"rooms\").add({\n        name: channelName\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SideBarOptionStyled, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-container\",\n      onClick: addChanelOption ? addChannel : selectChannel,\n      children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n        fontSize: \"small\",\n        style: {\n          padding: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this), Icon ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"channels-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), \" \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SideBarOption, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SideBarOption;\nexport default SideBarOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBarOption\");","map":{"version":3,"sources":["D:/PRO/React JS/slackclone/src/components/SideBarOption/SideBarOption.js"],"names":["React","db","useDispatch","enterRoom","SideBarOptionStyled","SideBarOption","Icon","title","addChanelOption","id","dispatch","selectChannel","roomId","addChannel","channelName","prompt","collection","add","name","padding"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;;;AAEA,SAASC,aAAT,CAAuB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,eAAd;AAA+BC,EAAAA;AAA/B,CAAvB,EAA2D;AAAA;;AAGvD;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,aAAa,GAAG,MAAM;AAC1B,QAAIF,EAAJ,EAAQ;AACNC,MAAAA,QAAQ,CACNP,SAAS,CAAC;AACRS,QAAAA,MAAM,EAAEH;AADA,OAAD,CADH,CAAR;AAKD;AACF,GARD;;AAUA,QAAMI,UAAU,GAAG,MAAM;AACvB,UAAMC,WAAW,GAAGC,MAAM,CAAC,2BAAD,CAA1B;;AAEA,QAAID,WAAJ,EAAiB;AACfb,MAAAA,EAAE,CAACe,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACzBC,QAAAA,IAAI,EAAEJ;AADmB,OAA3B;AAGH;AACJ,GARG;;AAUA,sBAEI,QAAC,mBAAD;AAAA,2BAEA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAEN,eAAe,GAAGK,UAAH,GAAgBF,aAA3E;AAAA,iBACKL,IAAI,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAE;AAACa,UAAAA,OAAO,EAAE;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA,cADb,EAEMb,IAAI,gBACF;AAAA,kBACKC;AADL;AAAA;AAAA;AAAA;AAAA,cADE,gBAOC;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,OACeA,KADf;AAAA;AAAA;AAAA;AAAA;AAAA,cATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBH;;GAnDQF,a;UAIYH,W;;;KAJZG,a;AAqDT,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport { db } from '../../firebase';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { enterRoom } from '../../features/appSlice';\r\n\r\nimport SideBarOptionStyled from './SideBarOptionStyted';\r\n\r\nfunction SideBarOption({Icon, title, addChanelOption, id}) {\r\n\r\n\r\n    // déclencher la requête avec Dispacth\r\n    const dispatch = useDispatch();\r\n\r\n    const selectChannel = () => {\r\n      if (id) {\r\n        dispatch(\r\n          enterRoom({\r\n            roomId: id,\r\n          })\r\n        );\r\n      }\r\n    };\r\n\r\n    const addChannel = () => {\r\n      const channelName = prompt(\"Please enter channel name\");\r\n  \r\n      if (channelName) {\r\n        db.collection(\"rooms\").add({\r\n          name: channelName,\r\n        });\r\n    }\r\n};\r\n\r\n    return (\r\n\r\n        <SideBarOptionStyled>\r\n\r\n        <div className=\"sidebar-container\" onClick={addChanelOption ? addChannel : selectChannel }>\r\n            {Icon && <Icon fontSize=\"small\" style={{padding: 10 }} />}\r\n            { Icon ? (\r\n                <h3>\r\n                    {title}\r\n                </h3>\r\n             )\r\n              : (\r\n                 \r\n                   <h3 className=\"channels-option\">\r\n                  <span>#</span> {title}\r\n                  </h3>\r\n                 \r\n              )\r\n              }\r\n        </div>\r\n      \r\n   \r\n        </SideBarOptionStyled>\r\n   \r\n    );\r\n}\r\n\r\nexport default SideBarOption;\r\n"]},"metadata":{},"sourceType":"module"}